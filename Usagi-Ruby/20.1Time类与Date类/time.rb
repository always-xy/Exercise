#Time类用于表示时间，其中还包含了地域时差时区的信息。Date类只用于表示年月日。
p Time.new
sleep 1
p Time.now

t = Time.now
p t
p t.year
p t.month
p t.day

=begin
	
-------------------------------------------------
|		方法名		|			意义				|
-------------------------------------------------
|		year		|	年						|
-------------------------------------------------
|		month		|	月						|
-------------------------------------------------
|		day			|	日						|
-------------------------------------------------
|		hour		|	时						|
-------------------------------------------------
|		min 		|	分						|
-------------------------------------------------
|		sec			|	秒						|
-------------------------------------------------
|		usec		|	秒以下的位数（以毫秒为单位） |
-------------------------------------------------
|		to_i		|从1970年1月1日到当前时间的秒数 |
-------------------------------------------------
|		wday		|	一周中的第几天（0为星期天）  |
-------------------------------------------------
|		mday		|一个月中的第几天（与day方法一样）|
-------------------------------------------------
|		yday		|一年中的第几天（1表示1月1日）	|
-------------------------------------------------
|		zone		|	时区（JST等）				|
-------------------------------------------------

=end

# Time.mktime(year[,month[,day[,hour[,min[,sec[,usec]]]]]]) 通过mktime方法可以根据指定时间获取time对象。
t = Time.mktime(2013, 5, 30, 3, 11, 12)
p t

#时间的计算 Time对象之间可以相互比较、运算。
t1 = Time.now
sleep(1)
t2 = Time.now
p t1 < t2
p t2 - t1

t = Time.now
p t
p t3 = t + 60 * 60 * 24
p t3

#时间的格式 通过下列方法可以把时间转换为遵循某种格式的字符串。
# t.strftime(format)
# t.to_s

=begin
	
	---------------------------------------------------------
	|	%A 		|	星期的名称（Sunday\Monday) 				|
	---------------------------------------------------------
	|	%a 		|	星期的缩写名称(Sun\Mon)					|
	---------------------------------------------------------
	|	%B 		|	月份的名称（January\February				|
	---------------------------------------------------------
	|	%b 		|	月份的缩写（Jan\Feb)						|
	---------------------------------------------------------
	|	%c 		|	日期与时间 								|
	---------------------------------------------------------
	| 	%d 		| 	日（01-31） 								|
	---------------------------------------------------------
	|	%H 		|	24小时制（00-23） 						|
	---------------------------------------------------------
	|	%I 		|	12小时制（01-12） 						|
	---------------------------------------------------------
	| 	%j 		| 	一年中的天（001-366） 						|
	---------------------------------------------------------
	|	%M 		|	分（00-59）								|
	---------------------------------------------------------
	|	%P 		|	上午或者下午								|
	---------------------------------------------------------
	|	%S 		| 	秒（00-60） 								|
	---------------------------------------------------------
	|	%U 		|	表示周的数字，星期天为一周开始 				|
	---------------------------------------------------------
	|	%W 		| 	表示周的数字，星期一为一周开始 				|
	---------------------------------------------------------
	|	%w 		|	表示星期的数字，0表示星期天（0-6）			|
	---------------------------------------------------------
	| 	%X 		| 	时间 									|
	---------------------------------------------------------
	| 	%x 		| 	日期 									|
	---------------------------------------------------------
	| 	%Y 		| 	表示西历的数字 							|
	---------------------------------------------------------
	|	%y 		| 	西历的后两位（00-99） 						|
	---------------------------------------------------------
	| 	%Z 		| 	时区（JST等）								|
	---------------------------------------------------------
	|	%z 		|	时区（+0900等）							|
	---------------------------------------------------------
	| 	%% 		|	原封不动地输出 							|
	---------------------------------------------------------
	t = Time.now
	p t.to_s
	p t.strftime("%Y-%m-%d %H:%M:%S %z") #与t.to_s相等

=end

#t.rfc2822方法可以生成符合电子邮件的头部信息时间。 t.iso8601 生成符合国际标准时间的字符串
require "time"

t = Time.now
p t.rfc2822
p t.iso8601

#本地时间 t.utc 和 t.localtime 方法。 Time#utc方法把Time对象的时区变更为国际协调时间（UTC）。反之用Time#localtime方法把UTC变更为UTC本地时间。
t = Time.now
p t 
p t.utc
p t.localtime

#从字符串中获取时间 
#通过require "time" 引用，我们就可以使用Time.parse方法，来操作以字符串形式表现时间。Time.parse方法除了可以返回与Time#to_s方法相同的格式。海可以返回“yyyy/mm/dd”等多种形式。

#日期的获取
#Date处理不包含时间的日期。使用Date.today方法可以得到表示当前日期的Date对象。使用Date需要引用date库。
require "date"

d = Date.today
p d
p d.wday
p d.mday
p d.yday
#Date.new可以指定时间。

#日期的运算 Date对象之间以天为单位，是可以进行算数运算的。返回的对象是Rational对象

#日期的格式 与Time一样，strftime方法也可以输出日期指定的格式。

#Date.parse方法可以将字符串转换为日期。